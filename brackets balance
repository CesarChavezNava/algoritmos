// Typescript
function isValid(s: string): boolean {
 
    const stack = []
    for(const bracket of s) {
        switch(bracket) {
            case "}":
                if(stack[stack.length - 1] !== '{') {
                    return false;
                }
                stack.pop();
                break;
            case "{":
                stack.push("{");
                break;
            case "]":
                if(stack[stack.length - 1] !== '[') {
                    return false;
                }
                stack.pop();
                break;
            case "[":
                 stack.push("[");
                break;
            case ")":
                if(stack[stack.length - 1] !== '(') {
                    return false;
                }
                stack.pop();
                break;
            case "(":
                stack.push("(");
                break;
        }
    }

    if(stack.length > 0) {
        return false;
    }

    return true;
};

// Better
function isValid(s: string): boolean {

    const stack = []
    const brackets = { "{": "}", "[": "]", "(": ")"}
    for(const bracket of s) {
        if(brackets[bracket]) {
            stack.push(bracket);
        } else {
            if(stack.length < 1) {
                return false;
            }
            const latsValue = stack.pop();
            if(brackets[latsValue] !== bracket) {
                return false;
            }
        }
    }

    if(stack.length > 0) {
        return false;
    }

    return true;
};
